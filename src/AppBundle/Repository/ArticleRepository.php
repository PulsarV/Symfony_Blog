<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{
    public function findAllArticlesPaginated($first, $max)
    {
        $dql = "SELECT ar
                FROM AppBundle:Article ar
                JOIN ar.author au
                JOIN ar.category ca
                LEFT JOIN ar.tags t
                LEFT JOIN ar.comments co
                ORDER BY ar.createdAt DESC";
        $query = $this->getEntityManager()->createQuery($dql)->setFirstResult($first)->setMaxResults($max);

        return new Paginator($query);
    }

    public function findAllArticlesByCategoryPaginated($slug, $first, $max)
    {
        $dql = "SELECT ar
                FROM AppBundle:Article ar
                JOIN ar.author au
                JOIN ar.category ca
                JOIN ar.tags t
                LEFT JOIN ar.comments co
                WHERE ca.slug = :slug
                ORDER BY ar.createdAt DESC";
        $query = $this->getEntityManager()->createQuery($dql)->setParameter('slug', $slug)->setFirstResult($first)->setMaxResults($max);

        return new Paginator($query);
    }

    public function findAllArticlesByAuthorPaginated($slug, $first, $max)
    {
        $dql = "SELECT ar
                FROM AppBundle:Article ar
                JOIN ar.author au
                JOIN ar.category ca
                JOIN ar.tags t
                LEFT JOIN ar.comments co
                WHERE au.slug = :slug
                ORDER BY ar.createdAt DESC";
        $query = $this->getEntityManager()->createQuery($dql)->setParameter('slug', $slug)->setFirstResult($first)->setMaxResults($max);

        return new Paginator($query);
    }

    public function findAllArticlesByTagPaginated($slug, $first, $max)
    {
        $dql = "SELECT ar
                FROM AppBundle:Article ar
                JOIN ar.author au
                JOIN ar.category ca
                JOIN ar.tags t
                LEFT JOIN ar.comments co
                WHERE t.slug = :slug
                ORDER BY ar.createdAt DESC";
        $query = $this->getEntityManager()->createQuery($dql)->setParameter('slug', $slug)->setFirstResult($first)->setMaxResults($max);

        return new Paginator($query);
    }

    public function findAllArticlesByTitlePaginated($slug, $first, $max)
    {
        $dql = "SELECT ar
                FROM AppBundle:Article ar
                JOIN ar.author au
                JOIN ar.category ca
                JOIN ar.tags t
                LEFT JOIN ar.comments co
                WHERE ar.slug = :slug
                ORDER BY ar.createdAt DESC";
        $query = $this->getEntityManager()->createQuery($dql)->setParameter('slug', $slug)->setFirstResult($first)->setMaxResults($max);

        return new Paginator($query);
    }

    public function findArticleBySlug($slug)
    {
        $dql = "SELECT ar, au, ca, t, co
                FROM AppBundle:Article ar
                JOIN ar.author au
                JOIN ar.category ca
                JOIN ar.tags t
                LEFT JOIN ar.comments co
                WHERE ar.slug = :slug";
        $query = $this->getEntityManager()->createQuery($dql)->setParameter('slug', $slug)->getOneOrNullResult();

        return $query;
    }

    public function findTopArticlesByRating()
    {
        $dql = "SELECT ar
                FROM AppBundle:Article ar
                ORDER BY ar.ratingCounter / ar.viewsCounter DESC";
        $query = $this->getEntityManager()->createQuery($dql)->setFirstResult(0)->setMaxResults(5)->getResult();

        return $query;
    }
}
